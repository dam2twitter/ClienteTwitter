/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.io.File;
import java.net.URL;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.swing.JOptionPane;
import logica.GestorPrincipal;
import logica.TableModelCarrera;
import logica.TableModelCorredor;
import logica.TableModelCorredorCarrera;
import modelo.Carrera;
import modelo.Corredor;
import modelo.CorredorCarrera;

/**
 *
 * @author daniel regueiro
 */
public class VisualizadorCarreras extends javax.swing.JDialog {

    private int filaCarreraSeleccionada = -1;
    private int corredorSeleccionado = -1;
    private int corredorSeleccionadoApuntado = -1;

    /**
     * Creates new form VisualizadorCarreras
     */
    public VisualizadorCarreras(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        rellenarTable();
        rellenarTableDisponibles();
        ponlaAyuda();

    }

    public void rellenarTable() {

        jTableCarreras.setModel(new TableModelCarrera(GestorPrincipal.getInstance().devolverColeccionCarreras()));

    }

    public void rellenarTableDisponibles() {

        jTableCorredoresDisponibles.setModel(new TableModelCorredor(GestorPrincipal.getInstance().devolverColeccionCorredores()));

    }

    public void rellenarTableCorredoresCarrera() {
        jTableCorredoresCarrera.setModel(new TableModelCorredorCarrera(carreraSeleccionada().getCorredores()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelParticipantes = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCorredoresCarrera = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCarreras = new javax.swing.JTable();
        jLabelTituloCarreras = new javax.swing.JLabel();
        jButtonVolver = new javax.swing.JButton();
        jButtonEliminarCorredor = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableCorredoresDisponibles = new javax.swing.JTable();
        jLabelParticipantes1 = new javax.swing.JLabel();
        jButtonAnadirCorredor = new javax.swing.JButton();
        jButtonModificarCarrera = new javax.swing.JButton();
        jButtonEliminarCarrera1 = new javax.swing.JButton();
        jButtonImprimirCarrera = new javax.swing.JButton();
        jButtonComenzarCarrera = new javax.swing.JButton();
        jButtonAyuda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelParticipantes.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        jTableCorredoresCarrera.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableCorredoresCarrera);

        jTableCarreras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableCarreras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCarrerasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCarreras);

        jLabelTituloCarreras.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabelTituloCarreras.setText("Carrera:");

        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        jButtonEliminarCorredor.setText("Eliminar Corredor");
        jButtonEliminarCorredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarCorredorActionPerformed(evt);
            }
        });

        jTableCorredoresDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableCorredoresDisponibles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCorredoresDisponiblesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableCorredoresDisponibles);

        jLabelParticipantes1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabelParticipantes1.setText("Corredores disponibles:");

        jButtonAnadirCorredor.setText("AÃ±adir Corredor");
        jButtonAnadirCorredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnadirCorredorActionPerformed(evt);
            }
        });

        jButtonModificarCarrera.setText("Modificar Carrera");
        jButtonModificarCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarCarreraActionPerformed(evt);
            }
        });

        jButtonEliminarCarrera1.setText("Eliminar Carrera");
        jButtonEliminarCarrera1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarCarrera1ActionPerformed(evt);
            }
        });

        jButtonImprimirCarrera.setText("Imprimir Carrera");
        jButtonImprimirCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirCarreraActionPerformed(evt);
            }
        });

        jButtonComenzarCarrera.setText("Comenzar ");
        jButtonComenzarCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonComenzarCarreraActionPerformed(evt);
            }
        });

        jButtonAyuda.setText("Ayuda");
        jButtonAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAyudaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonComenzarCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonImprimirCarrera)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonModificarCarrera)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonEliminarCarrera1))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabelParticipantes, javax.swing.GroupLayout.DEFAULT_SIZE, 761, Short.MAX_VALUE)
                            .addGap(121, 121, 121)
                            .addComponent(jButtonAnadirCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabelTituloCarreras, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelParticipantes1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAyuda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(728, 728, 728)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonVolver, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonEliminarCorredor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabelTituloCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModificarCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEliminarCarrera1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonImprimirCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonComenzarCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jLabelParticipantes1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelParticipantes, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAnadirCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonEliminarCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAyuda, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jButtonModificarCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarCarreraActionPerformed
        if (filaCarreraSeleccionada >= 0) {
            Carrera carrera = carreraSeleccionada();
            FormularioAltaCarreras altamodificacion = new FormularioAltaCarreras(this, true, carrera);
            altamodificacion.setVisible(true);
            jLabelParticipantes.setText("Participantes de la carrera " + carrera.getNombre() + " " + carrera.getIdentificador());
            this.rellenarTable();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una carrera", "Error", JOptionPane.ERROR_MESSAGE);
        }
        mantenerFilasSeleccionadas();
    }//GEN-LAST:event_jButtonModificarCarreraActionPerformed
    public Carrera carreraSeleccionada() {
        Carrera carrera = null;
        if (filaCarreraSeleccionada >= 0) {
            carrera = GestorPrincipal.getInstance().devolverColeccionCarreras().get(filaCarreraSeleccionada);
        }

    
        jButtonAnadirCorredor.setEnabled(carrera.isAbierta());
        jButtonImprimirCarrera.setEnabled(!carrera.isAbierta());
        jButtonEliminarCorredor.setEnabled(carrera.isAbierta());
        jButtonModificarCarrera.setEnabled(carrera.isAbierta());
        jButtonComenzarCarrera.setEnabled(carrera.isAbierta());

        return carrera;
    }

    public Corredor corredorSeleccionado() {
        Corredor corredor = null;
        if (corredorSeleccionado >= 0) {
            corredor = GestorPrincipal.getInstance().devolverColeccionCorredores().get(corredorSeleccionado);
        }
        return corredor;
    }

    private void mantenerFilasSeleccionadas() {
        if (filaCarreraSeleccionada > -1) {
            jTableCarreras.getSelectionModel().setSelectionInterval(filaCarreraSeleccionada, filaCarreraSeleccionada);
        }
        if (corredorSeleccionado > -1) {
            jTableCorredoresDisponibles.getSelectionModel().setSelectionInterval(corredorSeleccionado, corredorSeleccionado);
        }

    }

    private void jButtonAnadirCorredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnadirCorredorActionPerformed
        int dorsal = 0;
        Corredor corredor = null;
        CorredorCarrera corrCarr;
        boolean anadir = true;
        if (filaCarreraSeleccionada < 0 || corredorSeleccionado < 0) {
            JOptionPane.showMessageDialog(this, "Seleccione una carrera y un corredor", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            corredor = corredorSeleccionado();
            Carrera carrera = carreraSeleccionada();

            for (CorredorCarrera cor : carrera.getCorredores()) {
                if (cor.getCorredor().getDni().equals(corredor.getDni())) {

                    JOptionPane.showMessageDialog(this, "El corredor ya esta apuntado", "Error", JOptionPane.ERROR_MESSAGE);
                    anadir = false;
                }
            }

            if (carrera.getNumParticipantes() <= carrera.getCorredores().size()) {
                anadir = false;
                JOptionPane.showMessageDialog(this, "No quedan plazas", "Error", JOptionPane.ERROR_MESSAGE);
            }
            if (anadir) {
                carrera.getDorsales().add(carrera.getDorsales().size() + 1);
                dorsal = carrera.getDorsales().size();
                corrCarr = new CorredorCarrera(corredor, dorsal);
                carrera.getCorredores().add(corrCarr);
            }
            jTableCorredoresCarrera.setModel(new TableModelCorredorCarrera(carreraSeleccionada().getCorredores()));
        }
        this.rellenarTable();
        this.rellenarTableDisponibles();
        mantenerFilasSeleccionadas();
    }//GEN-LAST:event_jButtonAnadirCorredorActionPerformed


    private void jButtonEliminarCorredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarCorredorActionPerformed
        corredorSeleccionadoApuntado = jTableCorredoresCarrera.getSelectedRow();
        if (filaCarreraSeleccionada >= 0 && corredorSeleccionadoApuntado >= 0) {
            carreraSeleccionada().getCorredores().remove(corredorSeleccionadoApuntado);
            rellenarTable();
            rellenarTableCorredoresCarrera();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una carrera y un corredor", "Error", JOptionPane.ERROR_MESSAGE);
        }
        mantenerFilasSeleccionadas();
    }//GEN-LAST:event_jButtonEliminarCorredorActionPerformed

    private void jTableCarrerasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCarrerasMouseClicked
        filaCarreraSeleccionada = jTableCarreras.getSelectedRow();
        if (filaCarreraSeleccionada >= 0) {
            Carrera carrera = carreraSeleccionada();
            jLabelParticipantes.setText("Participantes de la carrera " + carrera.getNombre() + " " + carrera.getIdentificador());
            jTableCorredoresCarrera.setModel(new TableModelCorredorCarrera(carreraSeleccionada().getCorredores()));
        }
    }//GEN-LAST:event_jTableCarrerasMouseClicked

    private void jButtonEliminarCarrera1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarCarrera1ActionPerformed

        if (filaCarreraSeleccionada >= 0) {
            Carrera carrera = carreraSeleccionada();
            GestorPrincipal.getInstance().eleminarCarrera(carrera.getIdentificador());
            this.rellenarTable();

        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una carrera", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonEliminarCarrera1ActionPerformed

    private void jButtonImprimirCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirCarreraActionPerformed
        if (filaCarreraSeleccionada >= 0) {
        
            GestorPrincipal.getInstance().grabarCarreraACsv(carreraSeleccionada());
              JOptionPane.showMessageDialog(this, "Se ha grabado la carrera", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        }else{
        
         JOptionPane.showMessageDialog(this, "Seleccione una carrera", "Error", JOptionPane.ERROR_MESSAGE);
        }
        this.rellenarTable();
        this.rellenarTableDisponibles();
        mantenerFilasSeleccionadas();
    }//GEN-LAST:event_jButtonImprimirCarreraActionPerformed

    private void jTableCorredoresDisponiblesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCorredoresDisponiblesMouseClicked
        corredorSeleccionado = jTableCorredoresDisponibles.getSelectedRow();
    }//GEN-LAST:event_jTableCorredoresDisponiblesMouseClicked

    private void jButtonComenzarCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonComenzarCarreraActionPerformed
       if (filaCarreraSeleccionada >= 0) {
        Carrera carrera = carreraSeleccionada();
        CarreraComenzada formularioCarreraComenzada = new CarreraComenzada(this, true, carrera);
        formularioCarreraComenzada.setVisible(true);
         }else{
         JOptionPane.showMessageDialog(this, "Seleccione una carrera", "Error", JOptionPane.ERROR_MESSAGE);
        }
        rellenarTableCorredoresCarrera();
    }//GEN-LAST:event_jButtonComenzarCarreraActionPerformed
 private void ponlaAyuda() {
          try 
        {
            // Carga el fichero de ayuda
            File fichero = new File("help"+File.separator+"help_set.hs");
            URL hsURL = fichero.toURI().toURL();

            // Crea el HelpSet y el HelpBroker
            HelpSet helpset = new HelpSet(getClass().getClassLoader(), hsURL);
            HelpBroker hb = helpset.createHelpBroker();

            // Pone ayuda a item de menu al pulsarlo y a F1 en ventana
            // principal y secundaria.
            hb.enableHelpOnButton(jButtonAyuda, "gestionar_carreras", helpset);
            hb.enableHelpKey(getRootPane(),"gestionar_carreras",helpset);
          
        } 
        catch (Exception e) 
        {
            e.printStackTrace();
        }
        
    }
    private void jButtonAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAyudaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAyudaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnadirCorredor;
    private javax.swing.JButton jButtonAyuda;
    private javax.swing.JButton jButtonComenzarCarrera;
    private javax.swing.JButton jButtonEliminarCarrera1;
    private javax.swing.JButton jButtonEliminarCorredor;
    private javax.swing.JButton jButtonImprimirCarrera;
    private javax.swing.JButton jButtonModificarCarrera;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JLabel jLabelParticipantes;
    private javax.swing.JLabel jLabelParticipantes1;
    private javax.swing.JLabel jLabelTituloCarreras;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableCarreras;
    private javax.swing.JTable jTableCorredoresCarrera;
    private javax.swing.JTable jTableCorredoresDisponibles;
    // End of variables declaration//GEN-END:variables
}
